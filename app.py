from flask import Flask, render_template, request, jsonify
from random import choices
import json

app = Flask(__name__)

# –ì–ª–æ–±–∞–ª—å–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –∏–≥—Ä—ã
game_state = {
    'balance': 1000.0,  # –ù–∞—á–∞–ª—å–Ω—ã–π –±–∞–ª–∞–Ω—Å
    'current_bet': 0,
    'game_active': False
}

def check_win(results):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≤—ã–∏–≥—Ä—ã—à–Ω—ã–µ –∫–æ–º–±–∏–Ω–∞—Ü–∏–∏"""
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –¥–∂–µ–∫–ø–æ—Ç (5 –æ–¥–∏–Ω–∞–∫–æ–≤—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤ –≤ —Ä—è–¥—É)
    for row in results:
        if len(set(row)) == 1:
            return 'jackpot', 100
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∏–∞–≥–æ–Ω–∞–ª—å–Ω—ã—Ö –∫–æ–º–±–∏–Ω–∞—Ü–∏–π
    diagonal1 = [results[0][0], results[1][1], results[2][2], results[3][3], results[4][4]]
    diagonal2 = [results[0][4], results[1][3], results[2][2], results[3][1], results[4][0]]
    
    if len(set(diagonal1)) == 1:
        return 'diagonal', 10
    if len(set(diagonal2)) == 1:
        return 'diagonal', 10
    
    return 'lose', 0

@app.route('/')
def index():
    """–ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞"""
    return render_template('index.html')

@app.route('/api/balance')
def get_balance():
    """–ü–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å"""
    return jsonify({'balance': game_state['balance']})

@app.route('/api/set_balance', methods=['POST'])
def set_balance():
    """–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –Ω–æ–≤—ã–π –±–∞–ª–∞–Ω—Å"""
    data = request.get_json()
    new_balance = float(data.get('balance', 1000))
    game_state['balance'] = new_balance
    game_state['game_active'] = True
    return jsonify({'success': True, 'balance': game_state['balance']})

@app.route('/api/spin', methods=['POST'])
def spin():
    """–ö—Ä—É—Ç–∏—Ç—å —Å–ª–æ—Ç—ã"""
    data = request.get_json()
    bet = float(data.get('bet', 0))
    
    if bet <= 0 or bet > game_state['balance']:
        return jsonify({'error': '–ù–µ–≤–µ—Ä–Ω–∞—è —Å—Ç–∞–≤–∫–∞'}), 400
    
    # –í—ã—á–∏—Ç–∞–µ–º —Å—Ç–∞–≤–∫—É
    game_state['balance'] -= bet
    game_state['current_bet'] = bet
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
    symbols = ['üçí', 'üçã', 'üçä', 'üçá', 'üîî', 'üíé']
    results = []
    for _ in range(5):
        row = choices(symbols, k=5)
        results.append(row)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—ã–∏–≥—Ä—ã—à
    win_type, multiplier = check_win(results)
    
    if win_type != 'lose':
        winnings = bet * multiplier
        game_state['balance'] += winnings
        message = f"–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏ {winnings:.2f}!"
        if win_type == 'jackpot':
            message = f"–î–ñ–ï–ö–ü–û–¢! –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏ {winnings:.2f}!"
        elif win_type == 'diagonal':
            message = f"–£–î–ê–ß–ê! –í–ê–® –í–´–ò–ì–†–´–®: {winnings:.2f}!"
    else:
        message = "–ü–æ–≤–µ–∑–µ—Ç –≤ —Å–ª–µ–¥—É—é—â–∏–π —Ä–∞–∑!"
    
    return jsonify({
        'success': True,
        'results': results,
        'balance': game_state['balance'],
        'win_type': win_type,
        'winnings': bet * multiplier if win_type != 'lose' else 0,
        'message': message
    })

@app.route('/api/reset', methods=['POST'])
def reset_game():
    """–°–±—Ä–æ—Å–∏—Ç—å –∏–≥—Ä—É"""
    game_state['balance'] = 1000.0
    game_state['current_bet'] = 0
    game_state['game_active'] = False
    return jsonify({'success': True, 'balance': game_state['balance']})

if __name__ == '__main__':
    app.run(debug=True, host='0.0.0.0', port=5000)
